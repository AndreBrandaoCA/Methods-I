using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MethodsIV
{
    class Program
    {
        static void Main(string[] args)
        {
            DisplayMenu();
        }
        #region Question 1 
        /*1.	Write a method call DoubleIt(ref int x) that takes a single argument and does not return a value. This method will double the value of its argument. 
        In your main, call this method twice and print the value of the parameter after the method call.
        */
        static void DoubleIt(ref int x)
        {
            x*=2;
        }
        #endregion
        #region Question 2 
        /*2.	Write a method call CubeIt(int x, ref int cube) that takes two arguments and does not return a value. 
         * The method will cube the first argument and assign it to the second argument. 
        In your main, call this method twice and print the value of the parameters after each method call.
        */
        static void CubeIt(int x, ref int cube)
        {
            cube = x*x;
        }

        #endregion
        #region Question 3 
        /*3.	Write a method with the following header: static void CalculateTuitionFee(int numberOfCourses, double costPerCourse, ref double fees). 
         * ]This method will calculate and assign the required fees amount to the third argument. [Fees = number of courses * cost per course + 15.25]. 
        From your program Main() method, call the CalculateTuitionFee () method four times supplying different arguments each time and display 
        the value of the third argument after each method call.
        */
        static void CalculateTuitionFee(int numberOfCourses, double costPerCourse,ref double fees)
        {
            fees = numberOfCourses * costPerCourse + 15.25;
        }

        #endregion
        #region Question 4 
        /*   4.	Write a method that takes four parameter of type int.
         *   The method will assign the sum of the first two arguments to the third and the difference of the first two to the fourth.
         *   This method should be coded so that the calling method will able to modify the values of the third and fourth parameters.
        Call this method about three times and print out the values of all the four parameters after each method call.
        */
        static void SumAndDifference(int num1, int num2, ref int sum, ref int diff)
        {
            sum = num1 + num2;
            diff = Math.Abs(num1 - num2);
        }        
        #endregion
        #region Question 5
        /*5.	Write a method with header static void CalculateTrigValues(double degrees, out double sine, out double cosine, out double tangent). 
         * The method will use the first argument to compute the values of the other three arguments. 
         * Used the method Math.Sin, Math.Cos and Math.Tan to compute the second to fourth arguments respectively. [radians = degrees * Math.Pi /180]. 
        In the Main() method, invoke this method 20 times with the first argument taking the values 0, 5, 10, … 95 and 
        display the four arguments in a professional tabular format.
        */
        static void CalculateTrigValues(double degrees, out double sine, out double cosine, out double tangent)
        {
            double radians = degrees * (Math.PI / 180);
            sine = Math.Sin(radians);
            cosine = Math.Cos(radians);
            tangent = Math.Tan(radians);
        }
        #endregion
        #region Question 6 
        /*6.	Write a method that takes three parameters of type double: the first represents an angle,
         * the other two represents the sine and cosine of the angle respectively.
         * The method must be able to change the actual value of the second and third argument.
         * In your Main() method, call this method ten times with values 0.50, 0.51, 0.52 … 0.59 and printout the values for angle, sine and cosine in a tabular format*/
         static void SineCosine(double angle, out double sine,out double cosine)
        {
            sine = Math.Sin(angle);
            cosine = Math.Cos(angle);
        }

        #endregion
        #region Question 7
        /*	A quadratic equation is one in the form of ax2+bx+c = 0. Normally, there are two solutions to such equations given by the expression x=(-b∓√(b^2-4ac))/2a.
         *	The Write a method that takes five double arguments, the first three represents a, b and c respectively and the last two the solutions to the equation. 
         *	[You can check your implementation, the quadratic equation 12x2+x-6 will yield solutions -0.750 & 0.667]*/
         static void Quadratic(double a, double b, double c, out double x1,out  double x2)
        {
            x1 = ((-b) + (Math.Sqrt((b * b) - (4 * a * c)))) / 2 * a;
            x2 = ((-b) - (Math.Sqrt((b * b) - (4 * a * c)))) / 2 * a;
        }
        #endregion
        #region DisplayMenu()
        static void DisplayMenu()
        {
            Console.WriteLine("        Part IV(question 2-6)");
            Console.WriteLine("------------------------------------");
            Console.WriteLine("1) DoubleIt");
            Console.WriteLine("2) CubeIt");
            Console.WriteLine("3) CalculateTuitionFee");
            Console.WriteLine("4) Sum and Difference");
            Console.WriteLine("5) CalculateTrigValues");
            Console.WriteLine("6) SineCosine");
            Console.WriteLine("7) Quadratic");
            Console.WriteLine("");
            Console.WriteLine("0) To terminate the program");
            int option = 0;
            do
            {
                Console.Write("   Enter your choice ->");
                option = Convert.ToInt32(Console.ReadLine());
                int x = 0, cube = 0,num1 = 0, num2=0, sum=0, diff = 0;
                double fees = 0, sine = 0, cosine = 0, tangent = 0;
                switch (option)
                {
                    case 1:
                        #region Tester 1
                        x = 2;
                        DoubleIt(ref x);
                        Console.WriteLine($"The cube is {x}");
                        x = 6;
                        DoubleIt(ref x);
                        Console.WriteLine($"The cube is {x}");
                        #endregion
                        break;
                    case 2:
                        #region Tester 2
                        x = 25;
                        CubeIt(x, ref cube);
                        Console.WriteLine($"The cube is {cube}");
                        #endregion
                        break;
                    case 3:
                        #region Tester 3
                        CalculateTuitionFee(5, 542.2, ref fees);
                        Console.WriteLine($"The fees are {fees}");
                        CalculateTuitionFee(7, 635.65, ref fees);
                        Console.WriteLine($"The fees are {fees}");
                        CalculateTuitionFee(4, 465.25, ref fees);
                        Console.WriteLine($"The fees are {fees}");
                        #endregion
                        break;
                    case 4:
                        #region Tester 4
                        num1 = 2348;
                        num2 = 7456;
                        SumAndDifference(num1, num2, ref sum, ref diff);
                        Console.WriteLine($"The sum of {num1} and {num2} is {sum}, and the differene between them is {diff}");
                        num1 = 132;
                        num2 = 248;
                        SumAndDifference(num1, num2, ref sum, ref diff);
                        Console.WriteLine($"The sum of {num1} and {num2} is {sum}, and the differene betwen them is {diff}");
                        #endregion
                        break;
                    case 5:
                        #region Tester 5
                        Console.WriteLine("Degree      Sine     Cosine     Tangent");
                        Console.WriteLine("_______________________________________");
                        for (int i = 0; i<99; i += 5)
                        {
                            CalculateTrigValues(i ,out sine ,out cosine ,out tangent);
                            Console.WriteLine($"{i,6:F2}{sine,10:F2}{cosine,10:F2}{tangent,12:F2}");
                        }
                        #endregion
                        break;
                    case 6:
                        #region Tester 6
                        Console.WriteLine("Angle      Sine     Cosine");
                        Console.WriteLine("__________________________");
                        double angle = 0.50;
                        for (int i = 0; i < 10; i ++)
                        {
                            SineCosine(angle, out sine, out cosine);
                            Console.WriteLine($"{angle,6:F2}{sine,10:F4}{cosine,10:F4}");
                            angle += 0.01;
                        }
                        #endregion
                        break;
                    case 7:
                        #region Tester 7
                        //12x^2 + x - 6
                        double a = 12, b=1,c=-6;
                        double x1 = 0, x2 = 0;
                        Quadratic(a, b, c, out x1, out x2);
                        Console.WriteLine($"equation {a}x ^ 2 + {b}x + {c} will have roots {x1} and {x2}");
                        #endregion
                        break;
                    case 0:
                        #region Exit

                        #endregion
                        break;
                    default:
                        Console.WriteLine("Please select a valid option);");
                        break;
                }
            } while (option != 0);
        }
        #endregion

}
}
