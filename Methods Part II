using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MethodsII
{
    class Program
    {
        static void Main(string[] args)
        {
            int option = 0;
            Console.WriteLine("   Part   II (question 1 - 8)");
            Console.WriteLine("----------------------------------");
            Console.WriteLine("1) Display Horizontal Stars");
            Console.WriteLine("2) Display Vertical Stars");
            Console.WriteLine("3) Calculate and Display Volume");
            Console.WriteLine("4) Calculate and Display Tax");
            Console.WriteLine("5) Celsius Farenheit Table");
            Console.WriteLine("6) Km To Miles Table");
            Console.WriteLine("7) Display Sine Table");
            Console.WriteLine("8) Height Conversion");
            Console.WriteLine("0) Exit");
            Console.WriteLine("");
            do
            {
                Console.Write("Enter your choice->");
                option = Convert.ToInt32(Console.ReadLine());
                switch (option)
                {
                    case 1:
                        #region Question 1 Tester
                        DisplayHorizontalStars(0);
                        DisplayHorizontalStars(5);
                        DisplayHorizontalStars(10);
                        #endregion
                        break;
                    case 2:
                        #region Question 2 Tester
                        DisplayVerticalStars(0);
                        DisplayVerticalStars(5);
                        DisplayVerticalStars(10);
                        #endregion
                        break;
                    case 3:
                        #region Question 3 Tester
                        CalculateVolumeOfSphere(1);
                        CalculateVolumeOfSphere(2);
                        CalculateVolumeOfSphere(10);
                        #endregion
                        break;
                    case 4:
                        #region Question 4 Tester
                        CalculateAndDisplayTax(10, "on");
                        CalculateAndDisplayTax(1, "on");
                        CalculateAndDisplayTax(20, "QC");
                        CalculateAndDisplayTax(100, "qC");
                        CalculateAndDisplayTax(20, "BC");
                        #endregion
                        break;
                    case 5:
                        #region Question 5 Tester
                        CelsiusFarenheitTable(0);
                        CelsiusFarenheitTable(50);
                        CelsiusFarenheitTable(100);
                        #endregion
                        break;
                    case 6:
                        #region Question 6 Tester
                        KmtoMiles(10, 1, 5);
                        KmtoMiles(1, 0.5, 5);
                        KmtoMiles(10, 10, 5);
                        #endregion
                        break;
                    case 7:
                        #region Question 7 Tester
                        DisplaySineTable(0, 0.1, 5);
                        DisplaySineTable(0.5, 0.5, 5);
                        DisplaySineTable(1, 0.1, 5);
                        #endregion
                        break;
                    case 8:
                        #region Question 8 Tester
                        ConvertCmToM(90);
                        ConvertCmToM(120);
                        ConvertCmToM(275);
                        #endregion
                        break;
                    case 0:
                        break;
                    default:
                        Console.WriteLine("Please select a valid option");
                        break;
                }
            } while (option != 0);
        }
        #region Question 1
        /*Write a method called DisplayHorizontalStars(int numberOfStars). This method will output the number of stars horizontally specified by its argument. 
         * Call the DisplayHorizontalStars() method three times from your program Main() method, supplying 0, 5 and 10 respectively for the number of stars.*/
        static void DisplayHorizontalStars(int numberOfStars)
        {
            for(int i = 0; i < numberOfStars; i++)
            {
                Console.Write("*");
            }
            Console.WriteLine("");
        }
        #endregion
        #region Question 2
        /*Write a method similar to the one above that displays a vertical line of stars. 
            Call this method three times with arguments 0, 5 and 10 respectively.*/
        static void DisplayVerticalStars(int numberOfStars)
        {
            for (int i = 0; i < numberOfStars; i++)
            {
                Console.WriteLine("*");
            }
            Console.WriteLine("");
        }
        #endregion
        #region Question 3
        /*Write a method that accepts an argument of type double. 
         * The method will calculate and display the volume of a sphere with radius specified by its argument. [V=4/3  πr^3]. 
            Call this method from your main three times, with arguments 1, 2, and 10 respectively. The answers are 4.1888, 33.5103 and 4188.7902 respectively.
            Use Math.PI for the value of π*/
        static void CalculateVolumeOfSphere(double radius)
        {
            Console.WriteLine($"A sphere of radius {radius:N} will have a volume of {4 * Math.PI * radius * radius:N}");
        }
        #endregion
        #region Question 4
        /*Write a method that takes two arguments: a cost price and a two-letter province code. 
         * It will calculate and display the selling price. 
         * (If province is Ontario a tax of 13% is added to the price, if the province is Quebec a tax of 17% is added to the cost price. 
         * There is no tax for the rest of the provinces and territories). 
           In your main, call this method enough times to fully test it*/

        static void CalculateAndDisplayTax(double cost, string province)
        {
            double taxOn = 0.13, taxQc = 0.17;
            switch (province.ToUpper())
            {
                case "ON":
                    Console.WriteLine($"The tax on an item {cost:C} in {province} will be {cost*taxOn:C} ");
                    break;
                case "QC":
                    Console.WriteLine($"The tax on an item {cost:C} in {province} will be {cost * taxQc:C} ");
                    break;
                default:
                    Console.WriteLine($"The tax on an item {cost:C} in {province} will be {cost:C} ");
                    break;
            }
        }
        #endregion
        #region Question 5
        /*5.	Write a method that takes a single argument of type double. The will display a Celsius to Fahrenheit conversion table. 
         * The starting temperature is indicated by the argument and it will display 10 lines in increments of 1. [Fahrenheit = 9/5 Celsius + 32]. 
           In your main call this method two times, each time with a different value.
.       */
        static void CelsiusFarenheitTable(double celsius)
        {
            for (int i = 0;i<10;i++)
            {
                Console.WriteLine($"{celsius}  {((celsius*9 / 5) + 32):N}");
                celsius++;
            }

        }
        #endregion
        #region Question 6
        /*6.	Write a method that takes the following arguments: a starting km value of type double, an increment size of type double and the number of lines of type int. 
         * Your program will create and display a kilometer to miles conversion table. [miles = km * 0.621371]. 
         * In your main call this method three times, each time with different values.
        */
        static void KmtoMiles(double initialKm,double increment,int numberOfLines)
        {

            const double conversionKmToMile = 0.621371;
            for (int i = 0; i < numberOfLines; i++)
            {
                Console.WriteLine($"{initialKm:N} {initialKm * conversionKmToMile:N}");
                initialKm += increment;
            }
        }
        #endregion
        #region Question 7
        /*7.	Modify the DisplaySineTable() method in the previous section to accept the start value, the step size and number of rows as argument to the method.*/
        static void DisplaySineTable(double startValue, double increment, int row)
        {
            for (int i = 0; i < row; i++)
            {
                Console.WriteLine($"{startValue:N}{Math.Sin(startValue),8:N}");
                startValue += increment;
            }
        }
        #endregion
        #region Question 8
        /*8.	Write a method that converts a person’s height from centimeter to meters and centimeters and display the result on the console. 
        In your main method, you should call this method three times with argument 90, 120 and 275. 
        The result is shown in the table below. You do not have to create the table below!
        Input	Result
        90cm	0m 90cm
        120cm	1m 20 cm
        275cm	2m 75cm
        */
        static void ConvertCmToM(double heightInCm)
        {
            
            Console.WriteLine($"{heightInCm}cm    {(heightInCm/100):F2}m");
            
        }

        #endregion
    }
}
